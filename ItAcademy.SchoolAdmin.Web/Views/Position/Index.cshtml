@model IEnumerable<ItAcademy.SchoolAdmin.Web.Models.PositionViewModel>
@using ItAcademy.SchoolAdmin.BusinessLogic.SignalR

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Job positions</h2>
<br />
<input type="text" name="name" id="search" />
<input type="button" value="Поиск" id="submit" />

<p style="display: none" class="list-updated-notification">
    Subject list updated. <a href="#" class="list-updated-notification-link">Click here</a> to refresh.
</p>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>Name</th>
        <th>MaxEmployees</th>
        <th></th>
    </tr>
    <tbody id="positionDataTable">
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.MaxEmployees</td>
                <td>
                    <a href="@Url.Action(MVC.Position.Edit(item.Id))">Edit  |</a>
                    <a href="@Url.Action(MVC.Worker.EditEmployee(item.Id))">Set Worker |</a>
                    <a href="@Url.Action(MVC.Position.Delete(item.Id))">Delete </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts{
    <script src="~/Content/scripts/lib/jquery/jquery-3.3.1.min.js"></script>
    <script src="~/Content/scripts/lib/jquery-signalr/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript" src="~/Content/scripts/js/SearchHandler.js"></script>
    <script type="text/javascript" src="~/Content/scripts/js/PositionListUpdater.js"></script>
    <script type="text/javascript" src="~/Content/scripts/js/CommonListModificationHandler.js"></script>
    <script type="text/javascript">

        let updater = new PositionListUpdater({
            positionTableBody: $('#positionDataTable'),
            urlsCellTemplate:
                '@Html.ActionLink("Edit", "Edit", new {id = "_id_"}) | @Html.ActionLink("Delete", "Delete", new {id = "_id_"})'
        });

        let positionSearchHandler = new SearchHandlerWrapper({
            controllerName: 'position',
            actionName: 'search',
            updater: updater
        });

        let positionListModificationHandler = new CommonListModificationHandler({
            listModifiedEventName: '@PositionContextModificationNotifyingServiceDecorator.MethodName',
            listUpdater: updater,
            listUpdatedNotificationArea: $('.list-updated-notification')
        });

    </script>
}